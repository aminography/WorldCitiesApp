plugins {
    id 'com.android.dynamic-feature'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply from: '../../dependencies/shared.gradle'
apply from: '../../dependencies/unit_test.gradle'
apply from: '../../dependencies/android_test.gradle'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk

        applicationId "com.aminography.worldcities.citylist"

        versionCode appVersionCode
        versionName appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    // ------- architecture
    implementation project(":architecture:app")

    // ------- material
    implementation "com.google.android.material:material:${versions.material}"

    // ------- androidx
    implementation "androidx.core:core-ktx:${versions.androidx_core}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.fragment:fragment-ktx:${versions.fragment_ktx}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"

    // ------- dagger
    implementation "com.google.dagger:dagger:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"

    // ------- lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"

    // ------- paging
    implementation "androidx.paging:paging-runtime-ktx:${versions.paging}"
}